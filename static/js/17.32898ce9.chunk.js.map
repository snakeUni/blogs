{"version":3,"sources":["pages/posts/2019-06-03-state/document.mdx"],"names":["readingTime","text","minutes","time","words","MDXContent","props","_this","Object","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","src","alt","React","Component","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/17.32898ce9.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"7 min read\",\"minutes\":6.16,\"time\":369600,\"words\":1232}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"setxxxx-vs-setstate\"}}>{`setXXXX vs setState`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这篇文章主要是为了分析 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Hooks`}</MDXTag>{` 中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXXX`}</MDXTag>{` 和 class 中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 的一些不同之处， `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://uni-blog.netlify.com/posts/2019-05-28/hooks-vs-class/\"}}>{`上篇文章`}</MDXTag>{` 分析了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 的部分不同，以及各自调用触发的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 次数的分析， 同步和异步状态下的区别。要记住的是在函数式组件中，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXXX`}</MDXTag>{` 会进行 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Object.is`}</MDXTag>{` 进行比较。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"原因\"}}>{`原因`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`为什么写这篇文章呢？因为昨天 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`原型链`}</MDXTag>{` 在写 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`form`}</MDXTag>{` 的时候遇到了一些问题， 至于为什么又是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`form`}</MDXTag>{` 我就不多做描述了。这是我和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`原型链`}</MDXTag>{` 的对话:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`原型链`}</MDXTag>{`: 蓝银草为什么我调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setFieldValue`}</MDXTag>{` 设置的值不正确呢？\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`我`}</MDXTag>{`：你是怎么调用的呢？\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`原型链`}</MDXTag>{`: 我是连续调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setFieldValue`}</MDXTag>{` 两次，结果都是最后一次生效，但是调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setValues`}</MDXTag>{` 就是好的。\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`我`}</MDXTag>{`：不可能吧，我看下你的实现，看了下原型链的演示，原来如此，我知道了为什么只显示最后一个了，这是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React`}</MDXTag>{` 函数组件导致的这个问题。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://codesandbox.io/s/funny-mclean-6lru4\"}}>{`具体栗子点击这里`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hook`}</MDXTag>{` 代码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Demo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧老师\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"唱, 跳, rap\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"update hook\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name sync\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change hobby sync\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook sync:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook sync:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick3</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook async:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook async:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render hook\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Hooks</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      name:</span><span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">, hobby:</span><span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>hobby<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">set name and hobby sync</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick1<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          set name and hobby async\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick2<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          set name and hobby by callback\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick3<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          set name and hobby by callback async\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在代码里点击按钮，然后设置 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hobby`}</MDXTag>{`, 可能有人会问这不是两个属性值一起设置嘛，为什么不`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState({ ...state, name: '牧云云', hobby: 'coding' })`}</MDXTag>{`, 因为当时 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setFieldValue`}</MDXTag>{` 的用法是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setFieldValue(key, value)`}</MDXTag>{`, 所以就调用了多次。此时点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`set name and hobby sync`}</MDXTag>{` 按钮，会输出什么呢？`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817731-a3221800-9353-11e9-8a15-88bdbc67bcdd.png\",\"alt\":\"cc37e062\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以看到在事件中输出的都是上一次的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{`, 然后 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 了一次，为什么 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 了一次可以看我`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://uni-blog.netlify.com/posts/2019-05-28/hooks-vs-class/\"}}>{`上篇文章`}</MDXTag>{` 中的链接，这里我们先跳过这里，看 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render 部分`}</MDXTag>{`的输出`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`handleClick`}</MDXTag>{` 函数`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name sync\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change hobby sync\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以看出只有第二个生效了，直接看这个应该很容易知道，在调用第一次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 的时候，此时的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`牧云云`}</MDXTag>{`, 但是在设置第二个的时候， 此时的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 还是上一次的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name: 牧老师`}</MDXTag>{` 这个状态，所以在合并的过程，剩下的就是最后一次的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 的内容，那么输出的就是只有 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hobby: coding`}</MDXTag>{` 生效。那么在异步过程中呢？或者是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`非 React 合成事件和生命周期函数中`}</MDXTag>{`, 再次点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`set name and hobby async`}</MDXTag>{`, 那么输出又是什么呢？`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`handleClick1`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// setTimeout(() => {</span>\\n    <span class=\\\"token comment\\\">//   setState({ ...state, hobby: \\\"coding\\\" });</span>\\n    <span class=\\\"token comment\\\">//   console.log(\\\"hook state change name async\\\", state);</span>\\n    <span class=\\\"token comment\\\">// }, 3000);</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817757-b8974200-9353-11e9-9dda-b211de81e24d.png\",\"alt\":\"55a12b25\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以看到 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 了两次，生命周期函数也走了两次，这个不是我们今天关心的重点，今天关心的重点在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 的更新上, 第一次更新的时候 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 发生了变更，但是在第二次的时候，拿到的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 仍然是之前的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name: 牧老师`}</MDXTag>{`， 所以第一次设置的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name: 牧云云`}</MDXTag>{` 被覆盖了，页面上基本看不出来 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 变化的过程, 那我们把第二个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 放到 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setTimeout`}</MDXTag>{` 中呢， 此时页面的变化过程是很容易看出来的`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick1</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// setState({ ...state, hobby: \\\"coding\\\" });</span>\\n    <span class=\\\"token comment\\\">// console.log(\\\"hook state change name async\\\", state);</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hook state change name async\\\"</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这样修改的话， 页面的变化过程就很清晰.这个可以自行查看例子.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"usecallback\"}}>{`useCallback`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 在 hooks 中和 class 中都是支持回调的方式的，那么不妨尝试一下回调的方式`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`handleClick2`}</MDXTag>{` 函数`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick2</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook sync:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook sync:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`那么输出的又是什么呢？`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817787-d5337a00-9353-11e9-88e1-e2306f65b8cf.png\",\"alt\":\"42e8111c\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`和我们预期的是一致的，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hobby`}</MDXTag>{` 都发生了更新, 这是为什么呢？单独看代码可以知道在执行函数的时候都会把上一次的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 作为参数传递给下个函数使用，所以在调用的时候，每次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`preState`}</MDXTag>{` 都是上一次最新的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 所以能拿到最新的。那么在异步中表现又是什么样的呢？\n执行异步的代码`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`handleClick3`}</MDXTag>{` 函数`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleClick3</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook async:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preState</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pre hook async:\\\"</span><span class=\\\"token punctuation\\\">,</span> preState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>preState<span class=\\\"token punctuation\\\">,</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817797-e2506900-9353-11e9-8aac-c71f58ceb4e6.png\",\"alt\":\"1bf0c6c2\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`表现的是一致的。在 class 中表现的是什么样的呢 ?`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"class\"}}>{`Class`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo1</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧老师\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"唱, 跳, rap\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"update class\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"牧云云\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> hobby<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"coding\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render class\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Class</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        name:</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">, hobby:</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>hobby<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleClick<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">set name and hobby</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`点击按钮看一下输出结果`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817816-f5fbcf80-9353-11e9-8d37-9aa3820dacbb.png\",\"alt\":\"c6f6e146\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`class`}</MDXTag>{` 中表现的是正常的，因为在 class 中， state 是挂在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`this`}</MDXTag>{` 上始终这个 state 都是相同的一个引用，所以在第一次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 后，此时的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 修改为了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`牧云云`}</MDXTag>{`， 再一次调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 的时候，内部拿到的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`this.state`}</MDXTag>{` 已经是最新的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` 了，所以在设置 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hobby`}</MDXTag>{` 的时候已经是最新的了。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`看下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`updateReducer`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">updateReducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">reducer<span class=\\\"token punctuation\\\">,</span> initialArg<span class=\\\"token punctuation\\\">,</span> init</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> hook <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">updateWorkInProgressHook</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">var</span> queue <span class=\\\"token operator\\\">=</span> hook<span class=\\\"token punctuation\\\">.</span>queue<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">(</span>queue <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">invariant</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Should have a queue. This is likely a bug in React. Please file an issue.'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  queue<span class=\\\"token punctuation\\\">.</span>lastRenderedReducer <span class=\\\"token operator\\\">=</span> reducer<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>numberOfReRenders <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// This is a re-render. Apply the new render phase updates to the previous</span>\\n    <span class=\\\"token keyword\\\">var</span> _dispatch <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span>dispatch<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>renderPhaseUpdates <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Render phase updates are stored in a map of queue -> linked list</span>\\n      <span class=\\\"token operator\\\">...</span>省略部分\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>hook<span class=\\\"token punctuation\\\">.</span>memoizedState<span class=\\\"token punctuation\\\">,</span> _dispatch<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// The last update in the entire queue</span>\\n  <span class=\\\"token keyword\\\">var</span> last <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span>last<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// The last update that is part of the base state.</span>\\n  <span class=\\\"token keyword\\\">var</span> baseUpdate <span class=\\\"token operator\\\">=</span> hook<span class=\\\"token punctuation\\\">.</span>baseUpdate<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">var</span> baseState <span class=\\\"token operator\\\">=</span> hook<span class=\\\"token punctuation\\\">.</span>baseState<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Find the first unprocessed update.</span>\\n  <span class=\\\"token keyword\\\">var</span> first <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>baseUpdate <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>last <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// For the first update, the queue is a circular linked list where</span>\\n      <span class=\\\"token comment\\\">// `queue.last.next = queue.first`. Once the first update commits, and</span>\\n      <span class=\\\"token comment\\\">// the `baseUpdate` is no longer empty, we can unravel the list.</span>\\n      last<span class=\\\"token punctuation\\\">.</span>next <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    first <span class=\\\"token operator\\\">=</span> baseUpdate<span class=\\\"token punctuation\\\">.</span>next<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    first <span class=\\\"token operator\\\">=</span> last <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">?</span> last<span class=\\\"token punctuation\\\">.</span>next <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>first <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> _newState <span class=\\\"token operator\\\">=</span> baseState<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> newBaseState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> newBaseUpdate <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> prevUpdate <span class=\\\"token operator\\\">=</span> baseUpdate<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> _update <span class=\\\"token operator\\\">=</span> first<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> didSkip <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">do</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">var</span> updateExpirationTime <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>expirationTime<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>updateExpirationTime <span class=\\\"token operator\\\">&lt;</span> renderExpirationTime<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Priority is insufficient. Skip this update. If this is the first</span>\\n        <span class=\\\"token comment\\\">// skipped update, the previous update/state is the new base</span>\\n        <span class=\\\"token comment\\\">// update/state.</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>didSkip<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          didSkip <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n          newBaseUpdate <span class=\\\"token operator\\\">=</span> prevUpdate<span class=\\\"token punctuation\\\">;</span>\\n          newBaseState <span class=\\\"token operator\\\">=</span> _newState<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token comment\\\">// Update the remaining priority in the queue.</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>updateExpirationTime <span class=\\\"token operator\\\">></span> remainingExpirationTime<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          remainingExpirationTime <span class=\\\"token operator\\\">=</span> updateExpirationTime<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Process this update.</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_update<span class=\\\"token punctuation\\\">.</span>eagerReducer <span class=\\\"token operator\\\">===</span> reducer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// If this update was processed eagerly, and its reducer matches the</span>\\n          <span class=\\\"token comment\\\">// current reducer, we can use the eagerly computed state.</span>\\n          _newState <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>eagerState<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">var</span> _action2 <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>action<span class=\\\"token punctuation\\\">;</span>\\n          _newState <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>_newState<span class=\\\"token punctuation\\\">,</span> _action2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      prevUpdate <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">;</span>\\n      _update <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>next<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>_update <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">&amp;&amp;</span> _update <span class=\\\"token operator\\\">!==</span> first<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>didSkip<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      newBaseUpdate <span class=\\\"token operator\\\">=</span> prevUpdate<span class=\\\"token punctuation\\\">;</span>\\n      newBaseState <span class=\\\"token operator\\\">=</span> _newState<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// Mark that the fiber performed work, but only if the new state is</span>\\n    <span class=\\\"token comment\\\">// different from the current state.</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">is</span><span class=\\\"token punctuation\\\">(</span>_newState<span class=\\\"token punctuation\\\">,</span> hook<span class=\\\"token punctuation\\\">.</span>memoizedState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">markWorkInProgressReceivedUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    hook<span class=\\\"token punctuation\\\">.</span>memoizedState <span class=\\\"token operator\\\">=</span> _newState<span class=\\\"token punctuation\\\">;</span>\\n    hook<span class=\\\"token punctuation\\\">.</span>baseUpdate <span class=\\\"token operator\\\">=</span> newBaseUpdate<span class=\\\"token punctuation\\\">;</span>\\n    hook<span class=\\\"token punctuation\\\">.</span>baseState <span class=\\\"token operator\\\">=</span> newBaseState<span class=\\\"token punctuation\\\">;</span>\\n\\n    queue<span class=\\\"token punctuation\\\">.</span>lastRenderedState <span class=\\\"token operator\\\">=</span> _newState<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">var</span> dispatch <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span>dispatch<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>hook<span class=\\\"token punctuation\\\">.</span>memoizedState<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817874-23e11400-9354-11e9-8f56-bf6995fc93e3.jpg\",\"alt\":\"ddda387a\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`关注这块代码`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/59817900-38bda780-9354-11e9-8769-0d2e3d62336d.jpg\",\"alt\":\"8764128b\"}}></MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_update<span class=\\\"token punctuation\\\">.</span>eagerReducer <span class=\\\"token operator\\\">===</span> reducer<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// If this update was processed eagerly, and its reducer matches the</span>\\n  <span class=\\\"token comment\\\">// current reducer, we can use the eagerly computed state.</span>\\n  _newState <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>eagerState<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> _action2 <span class=\\\"token operator\\\">=</span> _update<span class=\\\"token punctuation\\\">.</span>action<span class=\\\"token punctuation\\\">;</span>\\n  _newState <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>_newState<span class=\\\"token punctuation\\\">,</span> _action2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{` 是什么呢？`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">updateState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initialState</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">updateReducer</span><span class=\\\"token punctuation\\\">(</span>basicStateReducer<span class=\\\"token punctuation\\\">,</span> initialState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">basicStateReducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">typeof</span> action <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"function\\\"</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">action</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> action<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{` 就是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`basicStateReducer`}</MDXTag>{`, 会进行判断，如果是函数就执行，如果不是函数就直接返回这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{`. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_update.action`}</MDXTag>{` 存储的就是`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXX`}</MDXTag>{` 的参数，所以在传递的不是函数的时候直接就会返回 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_action2`}</MDXTag>{`, 否则就会返回 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_action2(_newState)`}</MDXTag>{` 拿到最新的值.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`那么为什么 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`传递进去的 State`}</MDXTag>{` 不是最新的呢？ 可以参考 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://overreacted.io/how-are-function-components-different-from-classes/\"}}>{`How Are Function Components Different from Classes?`}</MDXTag>{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dan`}</MDXTag>{` 在这篇文章里面详细说明了，每次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 都是新的函数.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"总结\"}}>{`总结`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`类组件中， `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{` 会自动进行值的合并，所以可以单独设置一个值，但是在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hooks`}</MDXTag>{` 中在调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXXX`}</MDXTag>{` 的时候必须要设置全部的值，并且由于函数闭包的特性，调用多次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXXXX`}</MDXTag>{` 进行对象结构赋值的时候，拿到的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 始终是之前的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{`， 如果要想获取到最新的值，可以使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setXXX(callback)`}</MDXTag>{` 的方式拿到最新的值.`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"原因\",\n    level: 2,\n    title: \"原因\",\n    children: [\n        {\n              id: \"class\",\n              level: 3,\n              title: \"Class\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"总结\",\n    level: 2,\n    title: \"总结\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}