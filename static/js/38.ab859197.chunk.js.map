{"version":3,"sources":["pages/posts/2019-11-23-a-thought-of-hook/document.mdx","pages/posts/2019-11-23-a-thought-of-hook/1.png","pages/posts/2019-11-23-a-thought-of-hook/2.png","pages/posts/2019-11-23-a-thought-of-hook/3.png","pages/posts/2019-11-23-a-thought-of-hook/4.png","pages/posts/2019-11-23-a-thought-of-hook/5.png"],"names":["readingTime","text","minutes","time","words","MDXContent","props","_this","Object","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","parentName","id","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","src","require","React","Component","tableOfContents","arguments","length","undefined","level","title","children","frontMatter","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/38.ab859197.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.53,\"time\":151799.99999999997,\"words\":506}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`这几天一直忙于各种事情，仔细思考一件事的时间真的不是很多，但是由于今天值班所以时间还是偏多的，在看完了想看的文章或者博客后，开始了继续写手势这一块的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Hook`}</MDXTag>{`,\n恰好遇到了一个问题，这个问题经过了我们内部讨论出有两种解决办法，两种办法都是没有问题的，各有优缺点。那么今天遇到的问题到底是什么呢？`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"目录\"}}>{`目录`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`遇到的问题？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`如何解决`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`是否这样的解决是好的, 如何选择`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"遇到的问题\"}}>{`遇到的问题`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`之前我们的所有库都是开启了 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/hooks-rules.html#eslint-plugin\"}}>{`react-hook-eslint-plugin`}</MDXTag>{`, 重点是这个规则`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token string\\\">\\\"react-hooks/exhaustive-deps\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"warn\\\"</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`正好我这次的库我忘记去开启了就遇到了这个问题，简化一下例子`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> nodeRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nodeRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"xxxx\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// 使用 nodeRef.current 作为依赖是为了当有节点的是可以重新执行 effect</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>nodeRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getNode</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">node</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    nodeRef<span class=\\\"token punctuation\\\">.</span>current <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> getNode<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这是一个基础的自定义 hook, 这个 Hook 暴露出了一个函数叫做 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`getNode`}</MDXTag>{`, 使用这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`getNode`}</MDXTag>{` 挂载到任何一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dom`}</MDXTag>{` 节点上，当 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node`}</MDXTag>{` 存在的时候执行一些逻辑操作, 那么此时使用这个 hook`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> getNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>visible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>setVisible<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span>visible <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">&lt;</span>div ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>getNode<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>node<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`仔细看这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Test`}</MDXTag>{`，因为在顶层调用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useZoom`}</MDXTag>{`, 此时内部拿到的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nodeRef.current = null`}</MDXTag>{`, 所以 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`console`}</MDXTag>{` 不会走这是合理的，那么此时在点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setVisible`}</MDXTag>{`, 此时改变了\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{`, node 节点将会显示出来，此时 getNode 将会拿到正确的信息，但是你会发现一个奇怪的现象就是为什么内部的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`console`}</MDXTag>{` 仍然没有打印出来？？？这该不会是 react 的 bug 吧\n那么不妨在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{` 中答应一下信息看看，修改下代码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> nodeRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render effect\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nodeRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"xxxx\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// 使用 nodeRef.current 作为依赖是为了当有节点的是可以重新执行 effect</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>nodeRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getNode</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">node</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"node:\\\"</span><span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    nodeRef<span class=\\\"token punctuation\\\">.</span>current <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> getNode<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`第一次加载的时候，应该只会显示 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render effect`}</MDXTag>{`， 此时我们点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setVisible`}</MDXTag>{`, 看一下输出`}</MDXTag>\n<div>\n  <img src={require(\"./1.png\")} />\n</div>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://codesandbox.io/s/stoic-firefly-drrui\"}}>{`try it`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以看出 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render effect`}</MDXTag>{` 只输出了一次对不对，是不是很奇怪，明明 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nodeRef.current`}</MDXTag>{` 已经修改了，可是为啥这里的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`effect`}</MDXTag>{` 没有重新执行呢？于是我就喊了我们组的\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`煜寒`}</MDXTag>{` 过来(此时时间比较早只有煜寒来公司了)开启`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`小黄鸭`}</MDXTag>{`调试法，结果还是没看出什么原因，但是煜寒提出了之前在组件库里开启了 Hook 规则使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ref`}</MDXTag>{` 作为依赖的时候是无效的，\n我心里想应该不会吧，去年 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hook`}</MDXTag>{` 刚出来的时候我尝试过是可以的呀。现在不行了嘛。于是我去 condsandbox 上试验了一下，结果会有这样的提示`}</MDXTag>\n<div>\n  <img src={require(\"./2.png\")} />\n</div>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"如何解决\"}}>{`如何解决`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这个规则明确提示了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ref`}</MDXTag>{` 作为依赖是无效的，肯定是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React`}</MDXTag>{` 内部做了处理，至于做了什么处理，以及为什么要做这个处理，这个在这里先不讨论。现在我们知道问题出自哪里了，就是不能把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ref`}</MDXTag>{`\n作为依赖，那么应该如何修改呢？其实我们的目的很简单就是当 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node`}</MDXTag>{` 变化时候重新 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`re-render`}</MDXTag>{` 获取到新的节点然后做一些逻辑。那么可以这样修改`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"2,13,14,15\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>node<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render zoom\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render effect\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"xxxx\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// 使用 nodeRef.current 作为依赖是为了当有节点的是可以重新执行 effect</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>node<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"highlighted-line\\\">  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getNode</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">n</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node <span class=\\\"token operator\\\">!==</span> n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">      <span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>    <span class=\\\"token punctuation\\\">}</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"node:\\\"</span><span class=\\\"token punctuation\\\">,</span> n<span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> getNode<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://codesandbox.io/s/stoic-firefly-drrui\"}}>{`try it`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`首先这里有几个重要的点第一修改 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useRef`}</MDXTag>{` 变成 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`, 第二要注意的就是在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`getNode`}</MDXTag>{` 处，在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`getNode`}</MDXTag>{` 里需要信息判断，因为不判断就会造成死循环(在 class 里的话)，因为每次 setState, 都会\n造成 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`re-render`}</MDXTag>{`, 下次又 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setState`}</MDXTag>{`, 但是因为此时是在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`function component`}</MDXTag>{` 中，所以会做 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Object.is`}</MDXTag>{` 比较，死循环的问题不会存在，但是最好进行判断, 再次看一下输出`}</MDXTag>\n<div>\n  <img src={require(\"./3.png\")} />\n</div>\n<MDXTag name=\"p\" components={components}>{`从输出中可以导出， `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{` 执行了 2 次，至于为什么会有一次输出的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node: null null`}</MDXTag>{`, 这个我也不是很清楚。后面会探讨一下究竟是什么原因导致的。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"是否这样的解决是好的-如何选择\"}}>{`是否这样的解决是好的, 如何选择`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`看上面的代码以及输出是已经解决了问题，对不对？那么是否这样解决就是最合理的呢？我提出了这个问题在我们组里面进行了激烈的讨论。对于这个问题有两种不同的方案，首先按照 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react`}</MDXTag>{` 的模式来说，导致\n这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node`}</MDXTag>{` 改变的原因是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 的改变对不对？并不是其他的东西导致的(当然了也可以是其他的一些属性导致的)，那么既然是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 导致的为什么不把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 作为依赖呢？这是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`桃夭`}</MDXTag>{` 小姐姐\n说的，对这个没有问题，由于什么原因引起的就应该把这个原因作为依赖，但是在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useZoom`}</MDXTag>{` 的内部好像并不知道这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 是什么？只知道这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node`}</MDXTag>{` 是什么，这个 node 就是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 改变导致的结果`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`既然不知道 visible 是什么也不能把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`visible`}</MDXTag>{` 传入到 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useZoom`}</MDXTag>{` 中，那么是否可以把这个 node 的改变交给用户呢？这就是把之前处理状态的改变交给了用户而不是框架内部，类似于 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'控制反转'`}</MDXTag>{` 了。此时\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useZoom`}</MDXTag>{` 不在存储 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node`}</MDXTag>{` 节点，现在 node 节点有用户传入进来。不妨修改一下代码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">node</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render zoom\\\"</span><span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"render effect\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"xxxx\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// 使用 nodeRef.current 作为依赖是为了当有节点的是可以重新执行 effect</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>node<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useZoom`}</MDXTag>{` 的代码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> ref <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span>ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>visible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>setVisible<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span>visible <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">&lt;</span>div ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>node<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://codesandbox.io/s/stoic-firefly-drrui\"}}>{`try it`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`此时点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setVisible`}</MDXTag>{`, 发现没有 render, 这是正常的因为 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Test`}</MDXTag>{` 组件 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`re-render`}</MDXTag>{` 的时候，此时 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ref.current`}</MDXTag>{` 仍然是 null, 所以仍然是不可行的。`}</MDXTag>\n<div>\n  <img src={require(\"./4.png\")} />\n</div>\n<MDXTag name=\"p\" components={components}>{`那么在修改下例子吧`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"10,11,12,13,14,15,16\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>node<span class=\\\"token punctuation\\\">,</span> setNode<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">useZoom</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>visible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>setVisible<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span>visible <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>\\n<span class=\\\"highlighted-line\\\">        <span class=\\\"token operator\\\">&lt;</span>div</span><span class=\\\"highlighted-line\\\">          ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">n</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">!==</span> node<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">              <span class=\\\"token function\\\">setNode</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"highlighted-line\\\">          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"highlighted-line\\\">        <span class=\\\"token operator\\\">></span></span>          node\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://codesandbox.io/s/stoic-firefly-drrui\"}}>{`try it`}</MDXTag></MDXTag>\n<div>\n  <img src={require(\"./5.png\")} />\n</div>\n<MDXTag name=\"p\" components={components}>{`此时发现业务代码处理将变得很复杂。如果不在 ref 里面 setNode, 那么就需要记住节点在 effect 里面 setNode, 所以这样将会增加使用的难度，这样的`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`反转`}</MDXTag>{`是无意义的。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"conclusion\"}}>{`conclusion`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当需要用到 ref 这样的 api 的时候，可以看出交给用户处理是非常麻烦的，所以对于这种场景最好内置的对应的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Hook`}</MDXTag>{` 里面。`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`同时要注意 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`ref`}</MDXTag>{` 不能作为依赖！！！`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"遇到的问题\",\n    level: 2,\n    title: \"遇到的问题\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"如何解决\",\n    level: 2,\n    title: \"如何解决\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"是否这样的解决是好的-如何选择\",\n    level: 2,\n    title: \"是否这样的解决是好的, 如何选择\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"conclusion\",\n    level: 2,\n    title: \"conclusion\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","module.exports = __webpack_public_path__ + \"static/media/1.42122356.png\";","module.exports = __webpack_public_path__ + \"static/media/2.a678357b.png\";","module.exports = __webpack_public_path__ + \"static/media/3.f928f31b.png\";","module.exports = __webpack_public_path__ + \"static/media/4.7d7dab29.png\";","module.exports = __webpack_public_path__ + \"static/media/5.4c916022.png\";"],"sourceRoot":""}