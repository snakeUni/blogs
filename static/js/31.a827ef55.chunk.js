(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{84:function(n,a,s){"use strict";s.r(a),s.d(a,"readingTime",function(){return i}),s.d(a,"default",function(){return m}),s.d(a,"tableOfContents",function(){return d}),s.d(a,"frontMatter",function(){return g});var t=s(13),p=s(18),e=s(19),o=s(21),c=s(20),l=s(22),u=s(0),r=s.n(u),k=s(17),i={text:"10 min read",minutes:9.855,time:591300.0000000001,words:1971},m=function(n){function a(n){var s;return Object(p.a)(this,a),(s=Object(o.a)(this,Object(c.a)(a).call(this,n))).layout=null,s}return Object(l.a)(a,n),Object(e.a)(a,[{key:"render",value:function(){var n=this.props,a=n.components;Object(t.a)(n,["components"]);return r.a.createElement(k.MDXTag,{name:"wrapper",components:a},r.a.createElement(k.MDXTag,{name:"p",components:a},"\u5982\u4f55\u9ad8\u6548\u7684\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context"),", ",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://lanyincao.netlify.com/posts/2019-08-19/form/"}},"\u4e0a\u4e00\u7bc7\u6587\u7ae0")," \u8be6\u7ec6\u7684\u8bb2\u8ff0\u4e86\u5982\u4f55\u5199\u4e00\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Form"),", \u4ee5\u53ca\u5982\u4f55\u6539\u9020 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Form")," \u7684\u6027\u80fd\u3002\u90a3\u4e48\u662f\u5426\u540c\u6837\u7684\n\u5199\u6cd5\u4e5f\u53ef\u4ee5\u8fd0\u7528\u4e8e\u666e\u901a\u7ec4\u4ef6\u5462\uff1f"),r.a.createElement(k.MDXTag,{name:"h1",components:a,props:{id:"\u56de\u987e-context"}},"\u56de\u987e context"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://lanyincao.netlify.com/posts/2019-08-10/context/"}},"\u5728 context \u6587\u7ae0\u4e2d"),"\u8bb2\u4e86\u5177\u4f53\u7684\u7528\u6cd5, \u540c\u65f6\u4e5f\u8bb2\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Hook")," \u4e2d\u548c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Class")," \u4e2d\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Context")," \u7684\u533a\u522b\u3002\u540c\u65f6\u4e5f\u8bf4\u8fc7\u5728\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Context")," \u7684\n\u4e00\u4e9b\u95ee\u9898\u3002\u8fd9\u6837\u7684\u95ee\u9898\u8be5\u5982\u4f55\u53bb\u89e3\u51b3\u5462\uff1f\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Form")," \u4e2d\u7684\u65b9\u6848\u662f\u5426\u53ef\u4ee5\u590d\u7528\u5230\u5176\u4ed6\u666e\u901a\u7684\u7ec4\u4ef6\u4e2d\u5462\uff1f"),r.a.createElement(k.MDXTag,{name:"h1",components:a,props:{id:"react-redux"}},"react-redux"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/reduxjs/react-redux"}},"react-redux")," \u662f\u7531 ",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/reduxjs/redux"}},"redux")," \u5ef6\u4f38\u51fa\u6765\u7684\uff0c\u7528\u4e8e react \u4e2d\u7684\u72b6\u6001\u7ba1\u7406\u5e93\uff0c\u72b6\u6001\u7ba1\u7406\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"2018")," \u5e74\u662f\u975e\u5e38\u975e\u5e38\u7684\u706b\uff0c\u540c\u65f6\n\u4e5f\u5ef6\u4f38\u51fa\u4e86\u4e00\u5927\u6279\u72b6\u6001\u7ba1\u7406\u7684\u5e93\u6bd4\u5982 ",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/mobxjs/mobx"}},"mobx"),", ",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/dvajs/dva"}},"dva")," \u7b49\u7b49\u90fd\u662f\u975e\u5e38\u4f18\u79c0\u7684\u5e93\u3002",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-redux")," \u5728\u5f88\u591a\u9879\u76ee\u4e2d\u90fd\u4f7f\u7528\u4e86\u8fd9\u4e2a\u5e93\u3002\u90a3\u4e48\u8fd9\u4e2a\u5e93\u662f\u5426\u5b58\u5728\u540c\u6837\u7684\n\u95ee\u9898\u5462\uff1f\u4e0d\u59a8\u7528\u4e00\u4e2a\u7b80\u5355\u7684 demo \u6765\u770b\u4e00\u4e0b\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-redux-demo")),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u4ece ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"console.log")," \u4e2d\u53ef\u4ee5\u770b\u51fa\u5728\u4fee\u6539 count \u7684\u65f6\u5019\u53ea\u6709 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Count")," \u7ec4\u4ef6\u66f4\u65b0\uff0c\u5728\u4fee\u6539 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"person")," \u7684\u65f6\u5019\u53ea\u6709 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Person")," \u7ec4\u4ef6\u66f4\u65b0\u3002\u56e0\u4e3a\u65e0\u8bba\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Count")," \u8fd8\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Person"),"\uff0c\n\u90fd\u5728\u81ea\u5df1\u6240\u9700\u8981\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props")," \u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\u624d\u4f1a\u66f4\u65b0\u3002\u8fd9\u4e2a\u662f\u7b26\u5408 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"React")," \u7684\u6b63\u5e38\u7684\u6570\u636e\u6d41\u7684\uff0c\u7ec4\u4ef6\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props")," \u53d8\u5316\u4f1a\u8ba9\u7ec4\u4ef6\u53d1\u751f\u66f4\u65b0\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u90a3\u4e48\u662f\u5426 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"connect")," \u6bcf\u6b21\u90fd\u4f1a\u6267\u884c\u5462\uff1f",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"connect")," \u662f\u4e00\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"HOC"),", \u4f1a\u8fd4\u56de\u65b0\u7684\u7ec4\u4ef6\uff0c\u90a3\u4e0d\u59a8\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"mapStateToProps")," \u4e2d\u52a0\u5165 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"console.log")),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"mapCountStateToProps")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">mapCountStateToProps</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'mapCountStateToProps\'</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"mapPersonStateToProps")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">mapPersonStateToProps</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'mapPersonStateToProps\'</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Count")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dispatch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render count\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>count<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'increase\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          increase\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'decrease\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          decrease\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Person")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render person\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>\n          <span class="token operator">&lt;</span>span<span class="token operator">></span>name<span class="token punctuation">:</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n          <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>address<span class="token punctuation">:</span> <span class="token punctuation">{</span>address<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>\n          <span class="token operator">&lt;</span>button\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateName\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'\u7267\u4e91\u4e91\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            updateName\n          <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n          <span class="token operator">&lt;</span>button\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n              <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateAddress\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'hangzhou\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            updateAddress\n          <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u70b9\u51fb ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"increase")," \u6216\u8005 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"decrease")," \u6309\u94ae\uff0c\u770b\u4e00\u4e0b\u63a7\u5236\u53f0"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"img",components:a,parentName:"p",props:{src:"https://user-images.githubusercontent.com/17973020/63645933-381e0480-c73b-11e9-891b-f4bf7ba23a84.jpg",alt:"context1"}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u4ed4\u7ec6\u89c2\u5bdf\u4e0b\u53d1\u73b0 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render count")," \u662f\u6b63\u5e38\u7684\u6e32\u67d3\uff0c\u56e0\u4e3a\u70b9\u51fb\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"increase")," \u6216\u8005 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"decrease"),", \u4f46\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"mapCountStateToProps")," \u4ee5\u53ca\n",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"mapPersonStateToProps")," \u6bcf\u6b21\u90fd\u4f1a\u88ab\u8f93\u51fa\uff0c\u5373\u4f7f\u53ea\u66f4\u65b0\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"count")," \u7ec4\u4ef6\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props"),", \u5176\u5b9e\u8fd9\u4e2a\u5927\u5bb6\u4e0d\u540c\u592a\u8fc7\u4e8e\u5173\u5fc3\uff0c\u6211\u4e4b\u524d\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"twitter")," \u4e0a\n\u95ee\u8fc7 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Dan"),", \u5173\u4e8e\u6e32\u67d3\u6b21\u6570\u7684\u95ee\u9898\uff0c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Dan")," \u7684\u56de\u7b54\u5c31\u662f\u4e0d\u8981\u592a\u8fc7\u5728\u610f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render")," \u6b21\u6570\u8fd9\u662f\u5185\u90e8\u7684\u5b9e\u73b0\u7ec6\u8282\u4e86\u3002\u90a3\u8fd9\u4e2a\u5730\u65b9\u4f1a\u6709\u5f71\u54cd\u5417\uff1f"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"connect")," \u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u9ad8\u9636\u7ec4\u4ef6\uff0c\u4e0d\u59a8\u770b\u4e00\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"connect")," \u7684\u6e90\u7801"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createConnect</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n  connectHOC <span class="token operator">=</span> connectAdvanced<span class="token punctuation">,</span>\n  mapStateToPropsFactories <span class="token operator">=</span> defaultMapStateToPropsFactories<span class="token punctuation">,</span>\n  mapDispatchToPropsFactories <span class="token operator">=</span> defaultMapDispatchToPropsFactories<span class="token punctuation">,</span>\n  mergePropsFactories <span class="token operator">=</span> defaultMergePropsFactories<span class="token punctuation">,</span>\n  selectorFactory <span class="token operator">=</span> defaultSelectorFactory\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span>\n    <span class="token parameter">mapStateToProps<span class="token punctuation">,</span>\n    mapDispatchToProps<span class="token punctuation">,</span>\n    mergeProps<span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      pure <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      areStatesEqual <span class="token operator">=</span> strictEqual<span class="token punctuation">,</span>\n      areOwnPropsEqual <span class="token operator">=</span> shallowEqual<span class="token punctuation">,</span>\n      areStatePropsEqual <span class="token operator">=</span> shallowEqual<span class="token punctuation">,</span>\n      areMergedPropsEqual <span class="token operator">=</span> shallowEqual<span class="token punctuation">,</span>\n      <span class="token operator">...</span>extraOptions\n    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> initMapStateToProps <span class="token operator">=</span> <span class="token function">match</span><span class="token punctuation">(</span>\n      mapStateToProps<span class="token punctuation">,</span>\n      mapStateToPropsFactories<span class="token punctuation">,</span>\n      <span class="token string">\'mapStateToProps\'</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> initMapDispatchToProps <span class="token operator">=</span> <span class="token function">match</span><span class="token punctuation">(</span>\n      mapDispatchToProps<span class="token punctuation">,</span>\n      mapDispatchToPropsFactories<span class="token punctuation">,</span>\n      <span class="token string">\'mapDispatchToProps\'</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> initMergeProps <span class="token operator">=</span> <span class="token function">match</span><span class="token punctuation">(</span>mergeProps<span class="token punctuation">,</span> mergePropsFactories<span class="token punctuation">,</span> <span class="token string">\'mergeProps\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">connectHOC</span><span class="token punctuation">(</span>selectorFactory<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token comment">// used in error messages</span>\n      methodName<span class="token punctuation">:</span> <span class="token string">\'connect\'</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// used to compute Connect\'s displayName from the wrapped component\'s displayName.</span>\n      <span class="token function-variable function">getDisplayName</span><span class="token punctuation">:</span> <span class="token parameter">name</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Connect(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n\n      <span class="token comment">// if mapStateToProps is falsy, the Connect component doesn\'t subscribe to store state changes</span>\n      shouldHandleStateChanges<span class="token punctuation">:</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// passed through to selectorFactory</span>\n      initMapStateToProps<span class="token punctuation">,</span>\n      initMapDispatchToProps<span class="token punctuation">,</span>\n      initMergeProps<span class="token punctuation">,</span>\n      pure<span class="token punctuation">,</span>\n      areStatesEqual<span class="token punctuation">,</span>\n      areOwnPropsEqual<span class="token punctuation">,</span>\n      areStatePropsEqual<span class="token punctuation">,</span>\n      areMergedPropsEqual<span class="token punctuation">,</span>\n\n      <span class="token comment">// any extra options args can override defaults of connect or connectAdvanced</span>\n      <span class="token operator">...</span>extraOptions\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"connect")," \u672c\u8eab\u4e0d\u4f1a\u6709\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u6240\u4ee5\u5373\u4f7f\u6bcf\u6b21\u90fd\u6267\u884c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"\u6709\u53ef\u80fd\u4f60\u7279\u522b\u5728\u610f render \u7684\u6b21\u6570\uff0c\u53ef\u80fd\u5c31\u662f\u4e0d\u60f3 connect \u6bcf\u6b21\u90fd\u8981\u6267\u884c\uff0c\u5c31\u662f\u6709\u8fd9\u6837\u7684\u5f3a\u8feb\u75c7\uff0c\u90a3\u4e48\u5e94\u8be5\u5982\u4f55\u53bb\u4fee\u6539\u8fd9\u4e2a\u5462\uff1f")),r.a.createElement(k.MDXTag,{name:"hr",components:a}),r.a.createElement(k.MDXTag,{name:"h1",components:a,props:{id:"\u4ece\u96f6\u5b9e\u73b0\u4e00\u4e2a\u72b6\u6001\u7ba1\u7406"}},"\u4ece\u96f6\u5b9e\u73b0\u4e00\u4e2a\u72b6\u6001\u7ba1\u7406"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u5728\u5f00\u59cb\u8fd9\u4e2a\u90e8\u5206\u4e4b\u524d\uff0c\u9996\u5148\u8981\u6bd4\u8f83\u719f\u6089 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"redux"),", \u56e0\u4e3a\u8fd9\u90e8\u5206\u5f88\u591a\u4ee3\u7801\u90fd\u662f\u7ee7\u7eed\u6cbf\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"redux")," \u4e2d\u7684\u4ee3\u7801\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u4e00\u6b65\u4e00\u6b65\u7684\u6765\uff0c\u9996\u5148\u5bf9\u4e8e\u72b6\u6001\u7ba1\u7406\uff0c\u5e94\u8be5\u9700\u8981\u4e00\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider"),", \u4e0d\u59a8\u6765\u5b9e\u73b0\u8fd9\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider"),", Provider \u8fd8\u662f\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"React")," \u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context api"),",\n\u8fd9\u4e2a\u5b9e\u73b0\u662f\u4f7f\u7528\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"TS"),", \u5982\u679c\u5bf9 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"TS")," \u4e0d\u719f\u6089\u7684\u53ef\u4ee5\u67e5\u770b",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.typescriptlang.org/"}},"\u5b98\u7f51")),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> storeContext<span class="token punctuation">,</span> selectorContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./context\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProviderProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./type\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token operator">=</span> React<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> Provider<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">:</span> ProviderProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// \u7f13\u5b58 value \u7684\u503c\u8fdb\u884c\u5c40\u90e8\u66f4\u65b0</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>api<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>storeContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>selectorContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>api<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>selectorContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>storeContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider")," \u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context"),", \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5462\uff1f\u540e\u9762\u4f1a\u8be6\u7ec6\u89e3\u91ca, \u5728\u770b\u4e00\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context")," \u7684\u58f0\u660e"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> UseStoreResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./type\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> storeContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token operator">&lt;</span>UseStoreResult<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>\n\n<span class="token comment">/**\n * selectorContext \u7528\u6237\u83b7\u53d6\u503c\u5e76\u4e14\u53ef\u4ee5\u548c dispatch \u76f8\u5e94\u7684\u503c \u8fd9\u4e2a\u53ef\u4ee5\u8fdb\u884c\u7f13\u5b58\u6240\u4ee5\u771f\u6b63\u5b58\u50a8\u53ea\u7684\u5730\u65b9\u662f storeContext\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> selectorContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token operator">&lt;</span>UseStoreResult<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u8fd9\u4e9b\u7c7b\u578b\u7684\u5730\u65b9\u4e3a\u4e86\u65b9\u4fbf\u5feb\u901f\u76f4\u63a5\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"any")," \u6765\u4ee3\u66ff, \u53ef\u4ee5\u770b\u51fa\uff0c\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context")," \u4e2d\u58f0\u660e\u4e86\u4e24\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context"),", \u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider")," \u4e2d\u4f7f\u7528\u4e86\n\u8fd9\u4e24\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context"),"\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u56e0\u4e3a\u6574\u4e2a\u90e8\u5206\u90fd\u662f\u91c7\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Hooks")," \u7684\u65b9\u5f0f\u6765\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u4e0d\u518d\u547d\u540d\u4e3a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"createStore")," \u6240\u4ee5\u91c7\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useStore"),"\u3002"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> useStore<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span><span class="token operator">></span><span class="token punctuation">(</span>\n  reducer<span class="token punctuation">:</span> ReducerType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">,</span>\n  initialState<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  enhancer<span class="token operator">?</span><span class="token punctuation">:</span> any\n<span class="token punctuation">)</span><span class="token punctuation">:</span> UseStoreResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token keyword">get</span><span class="token punctuation">,</span> <span class="token keyword">set</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useCurrent</span><span class="token punctuation">(</span>initialState <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> listeners <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>Listener<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// \u7ee7\u7eed\u4f7f\u7528 redux \u4e2d\u7684\u4e2d\u95f4\u4ef6</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">\'function\'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> enhancer <span class="token operator">===</span> <span class="token string">\'function\'</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n    <span class="token punctuation">(</span><span class="token keyword">typeof</span> enhancer <span class="token operator">===</span> <span class="token string">\'function\'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> arguments<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'function\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>\n      <span class="token string">\'It looks like you are passing several store enhancers to \'</span> <span class="token operator">+</span>\n        <span class="token string">\'useStore(). This is not supported. Instead, compose them \'</span> <span class="token operator">+</span>\n        <span class="token string">\'together to a single function.\'</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">\'function\'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> enhancer <span class="token operator">===</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    enhancer <span class="token operator">=</span> initialState\n    initialState <span class="token operator">=</span> <span class="token keyword">undefined</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> enhancer <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> enhancer <span class="token operator">!==</span> <span class="token string">\'function\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'Expected the enhancer to be a function.\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token function">enhancer</span><span class="token punctuation">(</span>useStore<span class="token punctuation">)</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * \u8fd4\u56de store \u5b58\u7684\u6240\u6709\u7684 state\n   */</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">getState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">T</span>\n\n  <span class="token comment">/**\n   * \u76d1\u542c\u5668\u7528\u4e8e\u66f4\u65b0\u5b50\u7ec4\u4ef6\n   * @param listener\n   */</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">subscriber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">listener<span class="token punctuation">:</span> Listener</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> listener <span class="token operator">!==</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'expected listener to be a object\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// \u52a0\u5165\u5230\u76d1\u542c\u5668\u4e2d</span>\n    listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>\n      listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * \u7528\u4e8e\u4fee\u6539\u503c, \u7528\u4e8e\u4e2d\u95f4\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u4f20\u7b2c\u4e8c\u4e2a\u503c\uff0c\u4f46\u662f\u5728 selector \u4e2d\u4ecd\u7136\u9700\u8981\n   * @param action\n   * @param deps \u53ef\u80fd\u4e0d\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u5168\u90e8\u66f4\u65b0\n   */</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">dispatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">:</span> Action<span class="token punctuation">,</span> deps<span class="token operator">?</span><span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> oldState <span class="token operator">=</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// \u83b7\u53d6\u5230\u6267\u884c\u540e\u7684 state</span>\n    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>oldState <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span>\n    <span class="token keyword">set</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> changeKeys<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n    <span class="token comment">// \u8fdb\u884c\u6d45\u6bd4\u8f83\u83b7\u53d6\u5230\u4fee\u6539\u7684\u503c</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      deps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> key<span class="token punctuation">)</span>\n        <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> key<span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValue <span class="token operator">!==</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          changeKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// \u904d\u5386\u76d1\u542c\u5668\uff0c\u53ea\u5bf9\u53d8\u5316\u7684\u7ec4\u4ef6\u8fdb\u884c\u66f4\u65b0</span>\n    listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">listener</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> listenerProps <span class="token operator">=</span> listener<span class="token punctuation">.</span>props\n      <span class="token comment">// \u5982\u679c\u4f9d\u8d56\u5b58\u5728\u5219\u66f4\u65b0\u4f9d\u8d56\u4e2d\u7684\u9009\u9879\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u66f4\u65b0\u5168\u90e8</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// \u904d\u5386\u76d1\u542c\u5668\uff0c\u5bf9\u4fee\u6539\u7684\u90e8\u5206\u8fdb\u884c\u66f4\u65b0</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> changeKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>listenerProps<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>changeKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            listener<span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        listener<span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> action\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    getState<span class="token punctuation">:</span> getState<span class="token punctuation">,</span>\n    subscriber<span class="token punctuation">:</span> subscriber<span class="token punctuation">,</span>\n    dispatch<span class="token punctuation">:</span> dispatch\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useStore")," \u524d\u9762\u7684\u90e8\u5206\u548c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"redux")," \u4e2d\u7684\u4ee3\u7801\u5b8c\u5168\u4e00\u6837\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u6682\u65f6\u53ef\u4ee5\u4e0d\u770b, ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"subscriber")," \u90e8\u5206\u4e5f\u57fa\u672c\u6ca1\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u4f46\u662f\n\u8fd8\u662f\u8981\u770b\u4e00\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"listener")," \u7684\u53c2\u6570\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> <span class="token function-variable function">subscriber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">listener<span class="token punctuation">:</span> Listener</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> listener <span class="token operator">!==</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'expected listener to be a object\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// \u52a0\u5165\u5230\u76d1\u542c\u5668\u4e2d</span>\n  listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>\n    listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Listener</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">listener</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> any\n  props<span class="token punctuation">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u53ef\u4ee5\u770b\u5b9a\u4e49\u7684\u63a5\u53e3\uff0c",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"subscriber")," \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u4e2d\u5305\u62ec ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"listener")," \u51fd\u6570\u548c\u4e00\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props"),", \u5177\u4f53\u7528\u6cd5\u8fd9\u4e24\u4e2a\u662f\u5e72\u4ec0\u4e48\u7528\u7684, \u540e\u9762\u4f1a\u8bb2\u5230"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u5728\u770b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u8fd9\u4e2a\u51fd\u6570\uff0c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u662f\u4e3b\u4f53\u7684\u90e8\u5206\uff0c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u63a5\u53d7\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"action")," \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"deps")," \u4f9d\u8d56\u6570\u7ec4\n\u90a3\u4e48\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd9\u6837\u7684\u4e00\u4e2a\u4f9d\u8d56\u9879\u5462\uff1f\u5728\u770b\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u662f\u6700\u6700\u6700\u4e3b\u8981\u7684\u90e8\u5206\uff0c\u4e5f\u662f\u6700\u5173\u952e\u7684\u90e8\u5206\uff0c\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\uff0c\u53ea\u9700\u8981\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u5c31\u80fd\u5b9e\u73b0",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"\u5c40\u90e8\u6e32\u67d3")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> useSelector<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>\n  <span class="token function-variable function">callback</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> any<span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">)</span><span class="token punctuation">:</span> UseSelectorResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>selectorContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> forceUpdate <span class="token operator">=</span> <span class="token function">useForceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>api<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'expected useSelector to be used in Provider\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> propsRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// \u83b7\u53d6\u5230\u8fd4\u56de\u7684 props</span>\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSame</span><span class="token punctuation">(</span>propsRef<span class="token punctuation">.</span>current<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    propsRef<span class="token punctuation">.</span>current <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> current <span class="token operator">=</span> propsRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u8ba2\u9605\u9700\u8981\u7684\u4fe1\u606f</span>\n    api<span class="token punctuation">.</span><span class="token function">subscriber</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function-variable function">listener</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      props<span class="token punctuation">:</span> current\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>api<span class="token punctuation">,</span> forceUpdate<span class="token punctuation">,</span> current<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">dispatch</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">:</span> Action</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      api<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> action<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    getState<span class="token punctuation">:</span> api<span class="token punctuation">.</span>getState\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u4f7f\u7528\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"selectorContext"),"\uff0c\u800c\u4e0d\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"storeContext"),", \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u53ea\u8981 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"store")," \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"storeContext")," \u5fc5\u7136\u4f1a\n\u91cd\u65b0 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),", ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"storeContext")," \u91cd\u65b0 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),", \u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"storeContext")," \u7684\u5730\u65b9\u90fd\u4f1a\u91cd\u65b0 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),", \u90a3\u4e48\u4e3a\u4ec0\u4e48 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"selectorContext")," \u4e0d\u4f1a\u5462\uff1f\n\u5728\u4f1a\u6709\u770b\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Provider")," \u7684\u4ee3\u7801"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> Provider<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">:</span> ProviderProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// \u7f13\u5b58 value \u7684\u503c\u8fdb\u884c\u5c40\u90e8\u66f4\u65b0</span>\n<span class="token operator">></span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>api<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> \ud83e\udd14\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>storeContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>selectorContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>api<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>selectorContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>storeContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u7bad\u5934\u6240\u6307\u7684\u8fd9\u4e2a\u90e8\u5206\u5c31\u662f\u5173\u952e\u6240\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"const [api] = useState(value)")," \u901a\u8fc7\u8fd9\u6837\uff0c\u628a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"value")," \u8fdb\u884c\u7f13\u5b58\u4e86\uff0c\u8fd9\u6837\u5373\u4f7f\u6bcf\u6b21 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),",\n\u6b64\u65f6\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"api")," \u90fd\u662f\u76f8\u540c\u7684\u3002\u4e5f\u5c31\u4e0d\u4f1a\u9020\u6210\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"selectorContext")," \u7684\u5730\u65b9\u7684\u5c31\u4f1a\u66f4\u65b0\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u90a3\u4e48\u5982\u679c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u4e0d\u66f4\u65b0\u90a3\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector()")," \u4e0d\u4e5f\u4e0d\u66f4\u65b0\u4e86\u5417\uff1f\u8fd9\u6837\u5c31\u4f1a\u9020\u6210 bug \u7684\u4ea7\u751f\uff0c\u8fd9\u662f\u4e07\u4e07\u4e0d\u5141\u8bb8\u7684\u3002\n\u6240\u4ee5\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u5185\u90e8\u4f7f\u7528\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useForceUpdate"),"\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useForceUpdate")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">forceReducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">!</span>state<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n * forceUpdate\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useForceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">useReducer</span><span class="token punctuation">(</span>forceReducer<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u73b0\u5728\u53ef\u4ee5\u770b\u5230\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u5185\u90e8\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useEffect")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> propsRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// \u83b7\u53d6\u5230\u8fd4\u56de\u7684 props</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSame</span><span class="token punctuation">(</span>propsRef<span class="token punctuation">.</span>current<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  propsRef<span class="token punctuation">.</span>current <span class="token operator">=</span> props<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> current <span class="token operator">=</span> propsRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>\n\n<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// \u8ba2\u9605\u9700\u8981\u7684\u4fe1\u606f</span>\n  api<span class="token punctuation">.</span><span class="token function">subscriber</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">listener</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    props<span class="token punctuation">:</span> current\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>api<span class="token punctuation">,</span> forceUpdate<span class="token punctuation">,</span> current<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u53ea\u6709\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"current")," \u53d8\u5316\u7684\u65f6\u5019\u4f1a\u518d\u4e00\u6b21\u91cd\u65b0\u6ce8\u518c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"listener"),", \u8fd9\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"current")," \u901a\u8fc7\u8c03\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"callback(api.getState())")," \u6240\u5f97\uff0c\n\u4e5f\u5c31\u662f\u53ea\u6709\u5728 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u7684\u4f9d\u8d56\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\u624d\u4f1a\u91cd\u65b0\u6ce8\u518c\u3002\u5728\u4e1a\u52a1\u91cc\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector(() => ['a', 'b'])")," \u8fd9\u91cc\u7684\n",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"a")," \u548c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"b")," \u90fd\u662f\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u7ec4\u4ef6\u91cc\u9700\u8981\u4f7f\u7528\u5230\u7684\u503c\u3002\u628a\u4f7f\u7528\u7684\u503c\u4f5c\u4e3a\u4f9d\u8d56\uff0c\u53ea\u8981\u4f7f\u7528\u7684\u503c\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u8fdb\u884c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),"\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u5728\u770b\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u7684\u8fd4\u56de\u503c"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">return</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">dispatch</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">:</span> Action</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    api<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> action<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  getState<span class="token punctuation">:</span> api<span class="token punctuation">.</span>getState\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u6b64\u65f6\u7684\u8fd4\u56de\u503c\u63a5\u7ba1\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"store")," \u4e2d\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u51fd\u6570, dispatch \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e5f\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u7684\u4f9d\u8d56\u9879\uff0c\u6240\u4ee5\u5728\u6bcf\u6b21\u6267\u884c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u7684\u65f6\u5019\u90fd\u4f1a\n\u6267\u884c ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"selector")," \u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch"),"\uff0c \u7136\u540e\u8c03\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"store")," \u4e2d\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u3002\u5728\u56de\u5934\u770b\u4e0b ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"store")," \u4e2d\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">/**\n * \u7528\u4e8e\u4fee\u6539\u503c, \u7528\u4e8e\u4e2d\u95f4\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u4f20\u7b2c\u4e8c\u4e2a\u503c\uff0c\u4f46\u662f\u5728 selector \u4e2d\u4ecd\u7136\u9700\u8981\n * @param action\n * @param deps \u53ef\u80fd\u4e0d\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u5168\u90e8\u66f4\u65b0\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">dispatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">:</span> Action<span class="token punctuation">,</span> deps<span class="token operator">?</span><span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> oldState <span class="token operator">=</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token comment">// \u83b7\u53d6\u5230\u6267\u884c\u540e\u7684 state</span>\n  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>oldState <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span>\n  <span class="token keyword">set</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> changeKeys<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n  <span class="token comment">// \u8fdb\u884c\u6d45\u6bd4\u8f83\u83b7\u53d6\u5230\u4fee\u6539\u7684\u503c</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    deps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> key<span class="token punctuation">)</span>\n      <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> key<span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValue <span class="token operator">!==</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        changeKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// \u904d\u5386\u76d1\u542c\u5668\uff0c\u53ea\u5bf9\u53d8\u5316\u7684\u7ec4\u4ef6\u8fdb\u884c\u66f4\u65b0</span>\n  listeners<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">listener</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> listenerProps <span class="token operator">=</span> listener<span class="token punctuation">.</span>props\n    <span class="token comment">// \u5982\u679c\u4f9d\u8d56\u5b58\u5728\u5219\u66f4\u65b0\u4f9d\u8d56\u4e2d\u7684\u9009\u9879\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u66f4\u65b0\u5168\u90e8</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// \u904d\u5386\u76d1\u542c\u5668\uff0c\u5bf9\u4fee\u6539\u7684\u90e8\u5206\u8fdb\u884c\u66f4\u65b0</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> changeKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>listenerProps<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>changeKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          listener<span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      listener<span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> action\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u9996\u5148\u6839\u636e ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"deps")," \u627e\u51fa\u54ea\u4e9b\u662f\u4fee\u6539\u7684\u503c\uff0c\u56e0\u4e3a\u4e00\u4e2a\u7ec4\u4ef6\u6709\u53ef\u80fd\u4f1a\u6709\u8bb8\u591a\u4f9d\u8d56\u9879\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d\u53ea\u4fee\u6539\u4e86\u4f7f\u7528\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"a"),", ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"b")," \u6ca1\u6709\u6539\u53d8\uff0c \u90a3\u4e48\u5176\u4ed6\u7ec4\u4ef6\u4f9d\u8d56\u4e86\u8fd9\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"b")," \u4e5f\n\u4e0d\u5e94\u8be5\u66f4\u65b0\uff0c\u6240\u4ee5\u9700\u8981\u627e\u51fa\u6539\u53d8\u7684\u4f9d\u8d56\u9879"),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  deps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">getPath</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValue <span class="token operator">!==</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      changeKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u627e\u51fa\u6539\u53d8\u7684\u4f9d\u8d56\u9879\u540e\uff0c\u5bf9 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"listeners")," \u8fdb\u884c\u904d\u5386, \u627e\u51fa\u6240\u6709\u4f7f\u7528\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u7684\u5730\u65b9\u7684\u6240\u6709\u4f9d\u8d56\uff0c\u770b\u662f\u5426\u5b58\u5728\u5176\u4ed6\u7684\u4f9d\u8d56\u9879\u4e5f\u5305\u62ec\u8fd9\u6b21\u6539\u53d8\u7684\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982\u6b64\u65f6\u66f4\u6539\u4e86\n",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"a"),", \u90a3\u4e48\u6240\u6709\u5176\u4ed6\u7ec4\u4ef6\u4e2d\u6709\u5bf9 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"a")," \u7684\u4f9d\u8d56\u9879\u7684\u90fd\u5e94\u8be5\u8fdb\u884c\u91cd\u65b0 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render"),"\u3002\u8fd9\u4e5f\u662f ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"store")," \u4e2d ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"dispatch")," \u7684\u4e3b\u8981\u903b\u8f91\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u57fa\u672c\u4e0a\u4e00\u4e2a\u72b6\u6001\u7ba1\u7406\u7684\u6240\u6709\u4ee3\u7801\u5df2\u7ecf\u8bb2\u6e05\u695a\u4e86\uff0c\u90a3\u4e48\u4e0d\u59a8\u8bd5\u8bd5\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u70b9\u51fb ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"increase")," \u6216\u8005 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"decrease"),", \u53ea\u6253\u5370\u51fa\u4e86 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render count selector")," \u6240\u4ee5\u6bcf\u6b21 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useSelector")," \u4e5f\u53ea\u662f\u5355\u6b21\u6e32\u67d3\u3002\u8fd9\u4e2a\u4e5f\u662f\u5c40\u90e8\u6e32\u67d3\u4e86\u3002"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"img",components:a,parentName:"p",props:{src:"https://user-images.githubusercontent.com/17973020/63645935-4c620180-c73b-11e9-8536-122dfed705a7.jpg",alt:"context2"}})),r.a.createElement(k.MDXTag,{name:"p",components:a},"\u6700\u540e\u8d34\u4e00\u4e0b\u4ee3\u7801\uff0c\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5728",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/snakeUni/lanyincaos.cn/tree/master/src/pages/posts/2019-08-24-how-to-use-context-efficient"}},"\u8fd9\u91cc\u627e\u5230")),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-redux-demo")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Provider<span class="token punctuation">,</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-redux\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'redux\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u4e00\u4e2a\u7b80\u5355\u7684 reducer</span>\n<span class="token keyword">function</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">\'increase\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> count<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'decrease\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> count<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'updateName\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> name<span class="token punctuation">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'updateAddress\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> address<span class="token punctuation">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> state<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  count<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'lanyincao\'</span><span class="token punctuation">,</span>\n  address<span class="token punctuation">:</span> <span class="token string">\'shanghai\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">mapCountStateToProps</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'mapCountStateToProps\'</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dispatch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render count\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>count<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'increase\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          increase\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'decrease\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          decrease\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">mapPersonStateToProps</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'mapPersonStateToProps\'</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> name<span class="token punctuation">,</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render person\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>\n          <span class="token operator">&lt;</span>span<span class="token operator">></span>name<span class="token punctuation">:</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n          <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>address<span class="token punctuation">:</span> <span class="token punctuation">{</span>address<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>\n          <span class="token operator">&lt;</span>button\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateName\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'\u7267\u4e91\u4e91\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            updateName\n          <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n          <span class="token operator">&lt;</span>button\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n              <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateAddress\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'hangzhou\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            updateAddress\n          <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// count</span>\n<span class="token keyword">const</span> ConnectCount <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapCountStateToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// person</span>\n<span class="token keyword">const</span> ConnectPerson <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapPersonStateToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>App<span class="token operator">></span>\n        <span class="token operator">&lt;</span>ConnectCount <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>ConnectPerson <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>App<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-redux-chaos demo")),r.a.createElement(k.MDXTag,{name:"pre",components:a},r.a.createElement(k.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStore<span class="token punctuation">,</span> Provider<span class="token punctuation">,</span> useSelector <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-redux-chaos\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">\'lanyincao\'</span><span class="token punctuation">,</span> address<span class="token punctuation">:</span> <span class="token string">\'shanghai\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">\'increase\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> count<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'decrease\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> count<span class="token punctuation">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'updateName\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> name<span class="token punctuation">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">case</span> <span class="token string">\'updateAddress\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> address<span class="token punctuation">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> state<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> getState<span class="token punctuation">,</span> dispatch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render count selector\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">\'count\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> state<span class="token punctuation">:</span> any <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>count<span class="token punctuation">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'increase\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        increase\n      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'decrease\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        decrease\n      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> getState<span class="token punctuation">,</span> dispatch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'render person selector\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token string">\'address\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> state<span class="token punctuation">:</span> any <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>span<span class="token operator">></span>name<span class="token punctuation">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>address<span class="token punctuation">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>address<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button\n          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateName\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'\u7267\u4e91\u4e91\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          updateName\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button\n          onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'updateAddress\'</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token string">\'hangzhou\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          updateAddress\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>App<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Count <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>Person <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>App<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),r.a.createElement(k.MDXTag,{name:"h1",components:a,props:{id:"conclusion"}},"conclusion"),r.a.createElement(k.MDXTag,{name:"p",components:a},r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context")," \u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u5f53\u60f3\u8981\u4e1a\u52a1\u903b\u8f91\u5206\u79bb\u7684\u65f6\u5019\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u4e2a ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context")," \u80fd\u505a\u5230\u51cf\u5c11\u66f4\u65b0\u7684\u4f5c\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useMemo")," \u7b49\u76f8\u5173\u7684 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"api"),",\n\u6bd4\u8f83\u5728\u4e4e ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"render")," \u6b21\u6570\u7684\u8bdd\uff0c\u53ef\u4ee5\u91c7\u7528 ",r.a.createElement(k.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-redux")," \u4e00\u4e9b\u6210\u719f\u7684\u5e93\uff0c\u6216\u8005 ",r.a.createElement(k.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/snakeUni/react-redux-chaos"}},"react-redux-chaos")))}}]),a}(r.a.Component),d=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[]},g={}}}]);
//# sourceMappingURL=31.a827ef55.chunk.js.map