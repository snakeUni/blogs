{"version":3,"sources":["pages/posts/2019-08-24-how-to-use-context-efficient/document.mdx"],"names":["readingTime","text","minutes","time","words","MDXContent","props","_this","Object","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_Users_Vae_Desktop_project_my_lanyincaos_cn_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","parentName","href","id","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","src","alt","React","Component","tableOfContents","arguments","length","undefined","frontMatter"],"mappings":"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","file":"static/js/31.a827ef55.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"10 min read\",\"minutes\":9.855,\"time\":591300.0000000001,\"words\":1971}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`如何高效的使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{`, `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://lanyincao.netlify.com/posts/2019-08-19/form/\"}}>{`上一篇文章`}</MDXTag>{` 详细的讲述了如何写一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Form`}</MDXTag>{`, 以及如何改造 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Form`}</MDXTag>{` 的性能。那么是否同样的\n写法也可以运用于普通组件呢？`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"回顾-context\"}}>{`回顾 context`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://lanyincao.netlify.com/posts/2019-08-10/context/\"}}>{`在 context 文章中`}</MDXTag>{`讲了具体的用法, 同时也讲了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Hook`}</MDXTag>{` 中和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Class`}</MDXTag>{` 中使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Context`}</MDXTag>{` 的区别。同时也说过在使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Context`}</MDXTag>{` 的\n一些问题。这样的问题该如何去解决呢？在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Form`}</MDXTag>{` 中的方案是否可以复用到其他普通的组件中呢？`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"react-redux\"}}>{`react-redux`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/reduxjs/react-redux\"}}>{`react-redux`}</MDXTag>{` 是由 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/reduxjs/redux\"}}>{`redux`}</MDXTag>{` 延伸出来的，用于 react 中的状态管理库，状态管理在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`2018`}</MDXTag>{` 年是非常非常的火，同时\n也延伸出了一大批状态管理的库比如 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/mobxjs/mobx\"}}>{`mobx`}</MDXTag>{`, `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/dvajs/dva\"}}>{`dva`}</MDXTag>{` 等等都是非常优秀的库。`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux`}</MDXTag>{` 在很多项目中都使用了这个库。那么这个库是否存在同样的\n问题呢？不妨用一个简单的 demo 来看一下。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux-demo`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`从 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`console.log`}</MDXTag>{` 中可以看出在修改 count 的时候只有 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Count`}</MDXTag>{` 组件更新，在修改 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`person`}</MDXTag>{` 的时候只有 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Person`}</MDXTag>{` 组件更新。因为无论是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Count`}</MDXTag>{` 还是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Person`}</MDXTag>{`，\n都在自己所需要的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` 发生变化的时候才会更新。这个是符合 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React`}</MDXTag>{` 的正常的数据流的，组件的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` 变化会让组件发生更新。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`那么是否 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect`}</MDXTag>{` 每次都会执行呢？`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect`}</MDXTag>{` 是一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`HOC`}</MDXTag>{`, 会返回新的组件，那不妨在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapStateToProps`}</MDXTag>{` 中加入 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`console.log`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapCountStateToProps`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mapCountStateToProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mapCountStateToProps'</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> count <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapPersonStateToProps`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mapPersonStateToProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mapPersonStateToProps'</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Count`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Count</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token punctuation\\\">,</span> any<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render count'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'increase'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n          increase\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'decrease'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n          decrease\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Person`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dispatch<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render person'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>span<span class=\\\"token operator\\\">></span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>span style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>address<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>address<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>button\\n            onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateName'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'牧云云'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token operator\\\">></span>\\n            updateName\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>button\\n            onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n              <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateAddress'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hangzhou'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token operator\\\">></span>\\n            updateAddress\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`increase`}</MDXTag>{` 或者 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`decrease`}</MDXTag>{` 按钮，看一下控制台`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/63645933-381e0480-c73b-11e9-891b-f4bf7ba23a84.jpg\",\"alt\":\"context1\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`仔细观察下发现 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render count`}</MDXTag>{` 是正常的渲染，因为点击了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`increase`}</MDXTag>{` 或者 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`decrease`}</MDXTag>{`, 但是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapCountStateToProps`}</MDXTag>{` 以及\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapPersonStateToProps`}</MDXTag>{` 每次都会被输出，即使只更新了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`count`}</MDXTag>{` 组件的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{`, 其实这个大家不同太过于关心，我之前在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`twitter`}</MDXTag>{` 上\n问过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dan`}</MDXTag>{`, 关于渲染次数的问题， `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dan`}</MDXTag>{` 的回答就是不要太过在意 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 次数这是内部的实现细节了。那这个地方会有影响吗？`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect`}</MDXTag>{` 只是一个普通的高阶组件，不妨看一下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect`}</MDXTag>{` 的源码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">createConnect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>\\n  connectHOC <span class=\\\"token operator\\\">=</span> connectAdvanced<span class=\\\"token punctuation\\\">,</span>\\n  mapStateToPropsFactories <span class=\\\"token operator\\\">=</span> defaultMapStateToPropsFactories<span class=\\\"token punctuation\\\">,</span>\\n  mapDispatchToPropsFactories <span class=\\\"token operator\\\">=</span> defaultMapDispatchToPropsFactories<span class=\\\"token punctuation\\\">,</span>\\n  mergePropsFactories <span class=\\\"token operator\\\">=</span> defaultMergePropsFactories<span class=\\\"token punctuation\\\">,</span>\\n  selectorFactory <span class=\\\"token operator\\\">=</span> defaultSelectorFactory\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token parameter\\\">mapStateToProps<span class=\\\"token punctuation\\\">,</span>\\n    mapDispatchToProps<span class=\\\"token punctuation\\\">,</span>\\n    mergeProps<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      pure <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      areStatesEqual <span class=\\\"token operator\\\">=</span> strictEqual<span class=\\\"token punctuation\\\">,</span>\\n      areOwnPropsEqual <span class=\\\"token operator\\\">=</span> shallowEqual<span class=\\\"token punctuation\\\">,</span>\\n      areStatePropsEqual <span class=\\\"token operator\\\">=</span> shallowEqual<span class=\\\"token punctuation\\\">,</span>\\n      areMergedPropsEqual <span class=\\\"token operator\\\">=</span> shallowEqual<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token operator\\\">...</span>extraOptions\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> initMapStateToProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">match</span><span class=\\\"token punctuation\\\">(</span>\\n      mapStateToProps<span class=\\\"token punctuation\\\">,</span>\\n      mapStateToPropsFactories<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string\\\">'mapStateToProps'</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> initMapDispatchToProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">match</span><span class=\\\"token punctuation\\\">(</span>\\n      mapDispatchToProps<span class=\\\"token punctuation\\\">,</span>\\n      mapDispatchToPropsFactories<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string\\\">'mapDispatchToProps'</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> initMergeProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">match</span><span class=\\\"token punctuation\\\">(</span>mergeProps<span class=\\\"token punctuation\\\">,</span> mergePropsFactories<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'mergeProps'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">connectHOC</span><span class=\\\"token punctuation\\\">(</span>selectorFactory<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// used in error messages</span>\\n      methodName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'connect'</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// used to compute Connect's displayName from the wrapped component's displayName.</span>\\n      <span class=\\\"token function-variable function\\\">getDisplayName</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token parameter\\\">name</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Connect(</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>name<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes</span>\\n      shouldHandleStateChanges<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">Boolean</span><span class=\\\"token punctuation\\\">(</span>mapStateToProps<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// passed through to selectorFactory</span>\\n      initMapStateToProps<span class=\\\"token punctuation\\\">,</span>\\n      initMapDispatchToProps<span class=\\\"token punctuation\\\">,</span>\\n      initMergeProps<span class=\\\"token punctuation\\\">,</span>\\n      pure<span class=\\\"token punctuation\\\">,</span>\\n      areStatesEqual<span class=\\\"token punctuation\\\">,</span>\\n      areOwnPropsEqual<span class=\\\"token punctuation\\\">,</span>\\n      areStatePropsEqual<span class=\\\"token punctuation\\\">,</span>\\n      areMergedPropsEqual<span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// any extra options args can override defaults of connect or connectAdvanced</span>\\n      <span class=\\\"token operator\\\">...</span>extraOptions\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect`}</MDXTag>{` 本身不会有一些复杂的计算，所以即使每次都执行是没有影响的。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`有可能你特别在意 render 的次数，可能就是不想 connect 每次都要执行，就是有这样的强迫症，那么应该如何去修改这个呢？`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"从零实现一个状态管理\"}}>{`从零实现一个状态管理`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在开始这个部分之前，首先要比较熟悉 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux`}</MDXTag>{`, 因为这部分很多代码都是继续沿用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux`}</MDXTag>{` 中的代码。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一步一步的来，首先对于状态管理，应该需要一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag>{`, 不妨来实现这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag>{`, Provider 还是使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React`}</MDXTag>{` 的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context api`}</MDXTag>{`,\n这个实现是使用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TS`}</MDXTag>{`, 如果对 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TS`}</MDXTag>{` 不熟悉的可以查看`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.typescriptlang.org/\"}}>{`官网`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> storeContext<span class=\\\"token punctuation\\\">,</span> selectorContext <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./context'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ProviderProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./type'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> Provider<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> ProviderProps<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 缓存 value 的值进行局部更新</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>api<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>storeContext<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>selectorContext<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>api<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>selectorContext<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>storeContext<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag>{` 中使用了两个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{`, 为什么要使用两个一模一样的呢？后面会详细解释, 在看一下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{` 的声明`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> UseStoreResult <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./type'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> storeContext <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span>createContext<span class=\\\"token operator\\\">&lt;</span>UseStoreResult<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * selectorContext 用户获取值并且可以和 dispatch 相应的值 这个可以进行缓存所以真正存储只的地方是 storeContext\\n */</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> selectorContext <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span>createContext<span class=\\\"token operator\\\">&lt;</span>UseStoreResult<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这些类型的地方为了方便快速直接用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`any`}</MDXTag>{` 来代替, 可以看出，在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{` 中声明了两个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{`, 在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag>{` 中使用了\n这两个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`因为整个部分都是采用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Hooks`}</MDXTag>{` 的方式来开发的，所以不再命名为 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createStore`}</MDXTag>{` 所以采用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useStore`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> useStore<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">object</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n  reducer<span class=\\\"token punctuation\\\">:</span> ReducerType<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n  initialState<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span>\\n  enhancer<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> any\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> UseStoreResult<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCurrent</span><span class=\\\"token punctuation\\\">(</span>initialState <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> listeners <span class=\\\"token operator\\\">=</span> useRef<span class=\\\"token operator\\\">&lt;</span>Listener<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// 继续使用 redux 中的中间件</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> initialState <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token keyword\\\">typeof</span> enhancer <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">||</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> enhancer <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token keyword\\\">typeof</span> arguments<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token string\\\">'It looks like you are passing several store enhancers to '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'useStore(). This is not supported. Instead, compose them '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'together to a single function.'</span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> initialState <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token keyword\\\">typeof</span> enhancer <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'undefined'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    enhancer <span class=\\\"token operator\\\">=</span> initialState\\n    initialState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">undefined</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> enhancer <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'undefined'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> enhancer <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Expected the enhancer to be a function.'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">enhancer</span><span class=\\\"token punctuation\\\">(</span>useStore<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> initialState<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * 返回 store 存的所有的 state\\n   */</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token constant\\\">T</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * 监听器用于更新子组件\\n   * @param listener\\n   */</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">subscriber</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listener<span class=\\\"token punctuation\\\">:</span> Listener</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> listener <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'object'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'expected listener to be a object'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// 加入到监听器中</span>\\n    listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>listener<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> index <span class=\\\"token operator\\\">=</span> listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>listener<span class=\\\"token punctuation\\\">)</span>\\n      listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * 用于修改值, 用于中间件的时候可以不传第二个值，但是在 selector 中仍然需要\\n   * @param action\\n   * @param deps 可能不存在，如果不存在则全部更新\\n   */</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">dispatch</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">action<span class=\\\"token punctuation\\\">:</span> Action<span class=\\\"token punctuation\\\">,</span> deps<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> oldState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token comment\\\">// 获取到执行后的 state</span>\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>oldState <span class=\\\"token keyword\\\">as</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> changeKeys<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n\\n    <span class=\\\"token comment\\\">// 进行浅比较获取到修改的值</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>deps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      deps<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> oldValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>oldState<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">const</span> newValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldValue <span class=\\\"token operator\\\">!==</span> newValue<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          changeKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// 遍历监听器，只对变化的组件进行更新</span>\\n    listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listener</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> listenerProps <span class=\\\"token operator\\\">=</span> listener<span class=\\\"token punctuation\\\">.</span>props\\n      <span class=\\\"token comment\\\">// 如果依赖存在则更新依赖中的选项，如果不存在则更新全部</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>deps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 遍历监听器，对修改的部分进行更新</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> changeKeys<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>listenerProps<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>changeKeys<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            listener<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        listener<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> action\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    getState<span class=\\\"token punctuation\\\">:</span> getState<span class=\\\"token punctuation\\\">,</span>\\n    subscriber<span class=\\\"token punctuation\\\">:</span> subscriber<span class=\\\"token punctuation\\\">,</span>\\n    dispatch<span class=\\\"token punctuation\\\">:</span> dispatch\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useStore`}</MDXTag>{` 前面的部分和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux`}</MDXTag>{` 中的代码完全一样，所以这个地方暂时可以不看, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`subscriber`}</MDXTag>{` 部分也基本没有什么变化，但是\n还是要看一下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`listener`}</MDXTag>{` 的参数是什么样子的。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">subscriber</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listener<span class=\\\"token punctuation\\\">:</span> Listener</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> listener <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'object'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'expected listener to be a object'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// 加入到监听器中</span>\\n  listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>listener<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> index <span class=\\\"token operator\\\">=</span> listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>listener<span class=\\\"token punctuation\\\">)</span>\\n    listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Listener</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">listener</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> any\\n  props<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以看定义的接口，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`subscriber`}</MDXTag>{` 的参数是一个对象，对象中包括 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`listener`}</MDXTag>{` 函数和一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{`, 具体用法这两个是干什么用的, 后面会讲到`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在看 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 这个函数， `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 是主体的部分， `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 接受了两个参数，第一个参数是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{` 第二个参数是一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`deps`}</MDXTag>{` 依赖数组\n那么这里为什么需要这样的一个依赖项呢？在看下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 是最最最主要的部分，也是最关键的部分，在业务代码中，只需要使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 就能实现`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`局部渲染`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> useSelector<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token function-variable function\\\">callback</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token constant\\\">T</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> any<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> UseSelectorResult<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> api <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useContext</span><span class=\\\"token punctuation\\\">(</span>selectorContext<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> forceUpdate <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useForceUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>api<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'expected useSelector to be used in Provider'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> propsRef <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// 获取到返回的 props</span>\\n  <span class=\\\"token keyword\\\">const</span> props <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">isSame</span><span class=\\\"token punctuation\\\">(</span>propsRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">,</span> props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    propsRef<span class=\\\"token punctuation\\\">.</span>current <span class=\\\"token operator\\\">=</span> props<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> current <span class=\\\"token operator\\\">=</span> propsRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 订阅需要的信息</span>\\n    api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscriber</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function-variable function\\\">listener</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">forceUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      props<span class=\\\"token punctuation\\\">:</span> current\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>api<span class=\\\"token punctuation\\\">,</span> forceUpdate<span class=\\\"token punctuation\\\">,</span> current<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">dispatch</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">action<span class=\\\"token punctuation\\\">:</span> Action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">,</span> props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> action<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    getState<span class=\\\"token punctuation\\\">:</span> api<span class=\\\"token punctuation\\\">.</span>getState\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 使用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`selectorContext`}</MDXTag>{`，而不是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`storeContext`}</MDXTag>{`, 为什么？因为只要 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`store`}</MDXTag>{` 发生变化，那么 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`storeContext`}</MDXTag>{` 必然会\n重新 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`storeContext`}</MDXTag>{` 重新 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`, 使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`storeContext`}</MDXTag>{` 的地方都会重新 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`, 那么为什么 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`selectorContext`}</MDXTag>{` 不会呢？\n在会有看下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Provider`}</MDXTag>{` 的代码`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> Provider<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> ProviderProps<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 缓存 value 的值进行局部更新</span>\\n<span class=\\\"token operator\\\">></span>  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>api<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> 🤔\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>storeContext<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>selectorContext<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>api<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>selectorContext<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>storeContext<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`箭头所指的这个部分就是关键所在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`const [api] = useState(value)`}</MDXTag>{` 通过这样，把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`value`}</MDXTag>{` 进行缓存了，这样即使每次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`,\n此时的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`api`}</MDXTag>{` 都是相同的。也就不会造成使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`selectorContext`}</MDXTag>{` 的地方的就会更新。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`那么如果 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 不更新那在业务代码中使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector()`}</MDXTag>{` 不也不更新了吗？这样就会造成 bug 的产生，这是万万不允许的。\n所以在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 内部使用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useForceUpdate`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useForceUpdate`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">forceReducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">:</span> boolean</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">!</span>state<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * forceUpdate\\n */</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useForceUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>forceReducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`现在可以看到在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 内部的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> propsRef <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 获取到返回的 props</span>\\n<span class=\\\"token keyword\\\">const</span> props <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">isSame</span><span class=\\\"token punctuation\\\">(</span>propsRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">,</span> props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  propsRef<span class=\\\"token punctuation\\\">.</span>current <span class=\\\"token operator\\\">=</span> props<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> current <span class=\\\"token operator\\\">=</span> propsRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 订阅需要的信息</span>\\n  api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscriber</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">listener</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">forceUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    props<span class=\\\"token punctuation\\\">:</span> current\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>api<span class=\\\"token punctuation\\\">,</span> forceUpdate<span class=\\\"token punctuation\\\">,</span> current<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`只有在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`current`}</MDXTag>{` 变化的时候会再一次重新注册 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`listener`}</MDXTag>{`, 这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`current`}</MDXTag>{` 通过调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`callback(api.getState())`}</MDXTag>{` 所得，\n也就是只有在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 的依赖发生变化的时候才会重新注册。在业务里可以这样使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector(() => ['a', 'b'])`}</MDXTag>{` 这里的\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`a`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` 都是使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 组件里需要使用到的值。把使用的值作为依赖，只要使用的值发生改变的时候，才会进行 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在看下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 的返回值`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">dispatch</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">action<span class=\\\"token punctuation\\\">:</span> Action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    api<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">,</span> props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> action<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  getState<span class=\\\"token punctuation\\\">:</span> api<span class=\\\"token punctuation\\\">.</span>getState\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`此时的返回值接管了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`store`}</MDXTag>{` 中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 函数, dispatch 的第二个参数也是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 的依赖项，所以在每次执行 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 的时候都会\n执行 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`selector`}</MDXTag>{` 的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{`， 然后调用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`store`}</MDXTag>{` 中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 。在回头看下 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`store`}</MDXTag>{` 中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">/**\\n * 用于修改值, 用于中间件的时候可以不传第二个值，但是在 selector 中仍然需要\\n * @param action\\n * @param deps 可能不存在，如果不存在则全部更新\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">dispatch</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">action<span class=\\\"token punctuation\\\">:</span> Action<span class=\\\"token punctuation\\\">,</span> deps<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> oldState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">// 获取到执行后的 state</span>\\n  <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>oldState <span class=\\\"token keyword\\\">as</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> changeKeys<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n\\n  <span class=\\\"token comment\\\">// 进行浅比较获取到修改的值</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>deps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    deps<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> oldValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>oldState<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">const</span> newValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldValue <span class=\\\"token operator\\\">!==</span> newValue<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        changeKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// 遍历监听器，只对变化的组件进行更新</span>\\n  listeners<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listener</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> listenerProps <span class=\\\"token operator\\\">=</span> listener<span class=\\\"token punctuation\\\">.</span>props\\n    <span class=\\\"token comment\\\">// 如果依赖存在则更新依赖中的选项，如果不存在则更新全部</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>deps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 遍历监听器，对修改的部分进行更新</span>\\n      <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> changeKeys<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>listenerProps<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>changeKeys<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          listener<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      listener<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> action\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`首先根据 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`deps`}</MDXTag>{` 找出哪些是修改的值，因为一个组件有可能会有许多依赖项，但是在这个组件中只修改了使用的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`a`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` 没有改变， 那么其他组件依赖了这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` 也\n不应该更新，所以需要找出改变的依赖项`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>deps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  deps<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> oldValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>oldState<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> newValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getPath</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>oldValue <span class=\\\"token operator\\\">!==</span> newValue<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      changeKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`找出改变的依赖项后，对 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`listeners`}</MDXTag>{` 进行遍历, 找出所有使用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 的地方的所有依赖，看是否存在其他的依赖项也包括这次改变的依赖项，比如此时更改了\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`a`}</MDXTag>{`, 那么所有其他组件中有对 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`a`}</MDXTag>{` 的依赖项的都应该进行重新 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{`。这也是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`store`}</MDXTag>{` 中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{` 的主要逻辑。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`基本上一个状态管理的所有代码已经讲清楚了，那么不妨试试。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`点击 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`increase`}</MDXTag>{` 或者 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`decrease`}</MDXTag>{`, 只打印出了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render count selector`}</MDXTag>{` 所以每次 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useSelector`}</MDXTag>{` 也只是单次渲染。这个也是局部渲染了。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/17973020/63645935-4c620180-c73b-11e9-8536-122dfed705a7.jpg\",\"alt\":\"context2\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`最后贴一下代码，代码也可以在`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/snakeUni/lanyincaos.cn/tree/master/src/pages/posts/2019-08-24-how-to-use-context-efficient\"}}>{`这里找到`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux-demo`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Provider<span class=\\\"token punctuation\\\">,</span> connect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 一个简单的 reducer</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'increase'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'decrease'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateName'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateAddress'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> address<span class=\\\"token punctuation\\\">:</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createStore</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'lanyincao'</span><span class=\\\"token punctuation\\\">,</span>\\n  address<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'shanghai'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">App</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>Provider store<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Provider<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mapCountStateToProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mapCountStateToProps'</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> count <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Count</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token punctuation\\\">,</span> any<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render count'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'increase'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n          increase\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'decrease'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n          decrease\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mapPersonStateToProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mapPersonStateToProps'</span><span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dispatch<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> address <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render person'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>span<span class=\\\"token operator\\\">></span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>span style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>address<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>address<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>button\\n            onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateName'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'牧云云'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token operator\\\">></span>\\n            updateName\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>button\\n            onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n              <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateAddress'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hangzhou'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token operator\\\">></span>\\n            updateAddress\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// count</span>\\n<span class=\\\"token keyword\\\">const</span> ConnectCount <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapCountStateToProps<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Count<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// person</span>\\n<span class=\\\"token keyword\\\">const</span> ConnectPerson <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapPersonStateToProps<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Demo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>App<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>ConnectCount <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>ConnectPerson <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>App<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux-chaos demo`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useStore<span class=\\\"token punctuation\\\">,</span> Provider<span class=\\\"token punctuation\\\">,</span> useSelector <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux-chaos'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> initialState <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'lanyincao'</span><span class=\\\"token punctuation\\\">,</span> address<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'shanghai'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'increase'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'decrease'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateName'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateAddress'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> address<span class=\\\"token punctuation\\\">:</span> action<span class=\\\"token punctuation\\\">.</span>payload <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> children <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useStore</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> initialState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Provider<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> getState<span class=\\\"token punctuation\\\">,</span> dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useSelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render count selector'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'count'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> state<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'increase'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        increase\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'decrease'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        decrease\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Person</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> getState<span class=\\\"token punctuation\\\">,</span> dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useSelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'render person selector'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'address'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> state<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>span<span class=\\\"token operator\\\">></span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>span style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginLeft<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>address<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>address<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button\\n          onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateName'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'牧云云'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">></span>\\n          updateName\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button\\n          onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n            <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'updateAddress'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hangzhou'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">></span>\\n          updateAddress\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Demo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>App<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Count <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Person <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>App<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"conclusion\"}}>{`conclusion`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{` 用法很简单，当想要业务逻辑分离的时候可以尝试使用多个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{` 能做到减少更新的作用。也可以使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useMemo`}</MDXTag>{` 等相关的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`api`}</MDXTag>{`,\n比较在乎 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 次数的话，可以采用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux`}</MDXTag>{` 一些成熟的库，或者 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/snakeUni/react-redux-chaos\"}}>{`react-redux-chaos`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}